"use strict";(self.webpackChunkembedding_sdk_docs=self.webpackChunkembedding_sdk_docs||[]).push([[9178],{538:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>c});var t=i(5893),s=i(1151);const r={title:"Embed multiple visualizations on a page",description:"Embed multiple visualizations on a page"},o=void 0,a={id:"native-embedding-architecture/embed-multiple-viz",title:"Embed multiple visualizations on a page",description:"Embed multiple visualizations on a page",source:"@site/docs/native-embedding-architecture/embed-multiple-viz.md",sourceDirName:"native-embedding-architecture",slug:"/native-embedding-architecture/embed-multiple-viz",permalink:"/embedding-sdk-docs/native-embedding-architecture/embed-multiple-viz",draft:!1,unlisted:!1,editUrl:"https://github.com/MicroStrategy/embedding-sdk-docs/tree/public/docs/native-embedding-architecture/embed-multiple-viz.md",tags:[],version:"current",lastUpdatedBy:"ryu_mstr",lastUpdatedAt:1705977035,formattedLastUpdatedAt:"Jan 23, 2024",frontMatter:{title:"Embed multiple visualizations on a page",description:"Embed multiple visualizations on a page"},sidebar:"tutorialSidebar",previous:{title:"The Native Embedding SDK",permalink:"/embedding-sdk-docs/native-embedding-architecture/"},next:{title:"Destroy visualizations on a page",permalink:"/embedding-sdk-docs/native-embedding-architecture/destroy-multiple-viz"}},d={},c=[{value:"Purpose",id:"purpose",level:2},{value:"Requirements",id:"requirements",level:2},{value:"Example code",id:"example-code",level:2},{value:"Embed visualizations from one dossier",id:"embed-visualizations-from-one-dossier",level:3},{value:"Display a loading bar during the entire visualization embedding process",id:"display-a-loading-bar-during-the-entire-visualization-embedding-process",level:3},{value:"Embed visualizations from multiple dossiers",id:"embed-visualizations-from-multiple-dossiers",level:3},{value:"More available operations",id:"more-available-operations",level:2},{value:"References",id:"references",level:2}];function l(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.a)(),...e.components},{Available:i}=n;return i||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Available",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i,{since:"2021 Update 9 (May 2023)"}),"\n",(0,t.jsx)(n.h2,{id:"purpose",children:"Purpose"}),"\n",(0,t.jsx)(n.p,{children:"You can use the Native Embedding SDK to embed multiple visualizations in a client's webpage, with high performance that is similar to loading one out-of-the-box Library dossier page."}),"\n",(0,t.jsxs)(n.p,{children:["Custom visualizations are also supported. To embed custom visualizations, you should deploy them on MicroStrategy Library first. To deploy custom visualizations on MicroStrategy Library, refer to ",(0,t.jsx)(n.a,{href:"https://www2.microstrategy.com/producthelp/Current/VisSDK/Content/topics/HTML5/Deploying_a_custom_visualization.htm",children:"Deploy a custom visualization"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"requirements",children:"Requirements"}),"\n",(0,t.jsxs)(n.p,{children:["You must use the js bundle, ",(0,t.jsx)(n.code,{children:"native-embedding-sdk.js"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-html",children:'<script\n  type="text/javascript"\n  src="https://demo.microstrategy.com/MicroStrategyLibrary/javascript/native-embedding-sdk.js"\n><\/script>\n'})}),"\n",(0,t.jsxs)(n.p,{children:["The js bundle is also in the web-dossier war, in the same directory as ",(0,t.jsx)(n.code,{children:"embeddinglib.js"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"example-code",children:"Example code"}),"\n",(0,t.jsx)(n.h3,{id:"embed-visualizations-from-one-dossier",children:"Embed visualizations from one dossier"}),"\n",(0,t.jsxs)(n.p,{children:["To embed multiple visualizations from one dossier, after referring ",(0,t.jsx)(n.code,{children:"native-embedding-sdk.js"}),", use the code shown below:\n(please use ",(0,t.jsx)(n.code,{children:'<meta charset="UTF-8" />'})," character encoding tag)"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-html",children:'<!doctype html>\n<html lang="en">\n  <head>\n    <meta charset="UTF-8" />\n    <title></title>\n    <script\n      type="text/javascript"\n      src="https://demo.microstrategy.com/MicroStrategyLibrary/javascript/native-embedding-sdk.js"\n    ><\/script>\n  </head>\n  <body onload="nativeEmbedInDemoPage()">\n    <div id="container1" style="height: 500px;"></div>\n    <div id="container2" style="height: 500px;"></div>\n    <script type="text/javascript">\n      const nativeEmbedInDemoPage = async () => {\n        try {\n          // configuration for the target dossier\n          const configs = {\n            projectId: "EC70648611E7A2F962E90080EFD58751",\n            objectId: "27D332AC6D43352E0928B9A1FCAF4AB0",\n          };\n          const environment = await microstrategy.embeddingComponent.environments.create({\n            serverUrl: `https://demo.microstrategy.com/MicroStrategyLibrary`,\n            getAuthToken() {\n              return fetch(`https://demo.microstrategy.com/MicroStrategyLibrary/api/auth/login`, {\n                method: "POST",\n                credentials: "include", // including cookie\n                mode: "cors", // setting as CORS mode for cross origin\n                headers: { "Content-Type": "application/json" },\n                body: JSON.stringify({\n                  // here we login as guest user, you can log in as normal user with `username` and `password` as well\n                  // username: "input your username",\n                  // password: "input your password",\n                  loginMode: 8, // 8 means guest login, use `1` if you log in as normal user\n                }),\n              })\n                .then((response) => {\n                  if (response && response.ok) {\n                    return response.headers.get("X-MSTR-authToken");\n                  }\n                  throw Error("Failed to fetch auth token.");\n                })\n                .catch((error) => {\n                  console.log("Error:", error);\n                });\n            },\n          });\n          const mstrDossier = await environment.loadDossier({\n            projectId: configs.projectId,\n            objectId: configs.objectId,\n          });\n          // the viz keys can be obtained from dossier definition APIs: e.g.`GET /app/v2/dossier/{dossierId}/definition`\n          await mstrDossier.refresh([\n            {\n              key: "W1334",\n              container: document.getElementById("container1"),\n            },\n            {\n              key: "A1F3431F2CA2481BB966EC8F35A9AC3A",\n              container: document.getElementById("container2"),\n            },\n          ]);\n        } catch (e) {\n          console.error(e.message);\n        }\n      };\n    <\/script>\n  </body>\n</html>\n'})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"applicationType"})," must be unset or equal to ",(0,t.jsx)(n.code,{children:"35"}),". Because the implementation of Native Embedding SDK is based on login as a Library user, which uses the param of ",(0,t.jsx)(n.code,{children:"applicationType:35"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"display-a-loading-bar-during-the-entire-visualization-embedding-process",children:"Display a loading bar during the entire visualization embedding process"}),"\n",(0,t.jsxs)(n.p,{children:["During the existing visualization embedding process, the Native Embedding SDK knows which container to use when you call the ",(0,t.jsx)(n.code,{children:"dossier.refresh"})," API, and the loading bar appears at that time.\nIf you want to see the loading bar during the entire embedding process, create an implementation like this:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-html",children:'<body>\n  <div id="container1"></div>\n</body>\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-css",children:"#container1 {\n  width: 200px;\n  height: 300px;\n}\n\n#mstrLoadingBarParent {\n  width: 100%;\n  height: 100%;\n  background-color: white;\n  position: relative;\n}\n\n#mstrLoadingBar {\n  width: 100%;\n  height: 100%;\n  background: transparent url(yourLoadingIconUrl) no-repeat center;\n  background-color: white;\n  position: absolute;\n  left: 0px;\n  top: 0px;\n  display: block;\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["You need to set the height and length with the container element.\nWe haven't had a default height and length when we call ",(0,t.jsx)(n.code,{children:"dossier.refresh"})," API to embed a viz. If the container element hasn't had the height and length, you can't see your embed visualization."]}),"\n",(0,t.jsxs)(n.p,{children:["Find the ",(0,t.jsx)(n.code,{children:"getAuthToken"})," function in ",(0,t.jsx)(n.a,{href:"/embedding-sdk-docs/native-embedding-architecture/embed-multiple-viz#example-code",children:"the Native Embedding SDK doc"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'try {\n  const showLoadingBar = (container) => {\n    // the position of the loading bar parent element should be relative\n    const loadingBarParentDiv = document.createElement("div");\n    loadingBarParentDiv.id = "mstrLoadingBarParent";\n    // create the div\n    const loadingBarDiv = document.createElement("div");\n    loadingBarDiv.id = "mstrLoadingBar";\n    loadingBarParentDiv.appendChild(loadingBarDiv);\n    container.appendChild(loadingBarParentDiv);\n  };\n\n  const hideLoadingBar = (container) => {\n    container.querySelector("#mstrLoadingBar").remove();\n  };\n\n  const container1 = document.getElementById("container1");\n\n  showLoadingBar(container1);\n\n  const environment = await microstrategy.embeddingComponent.environments.create({\n    serverUrl: "https://demo.microstrategy.com/MicroStrategyLibrary",\n    getAuthToken: () => {\n      // Logic similar to the existing Native Embedding SDK, but only standard auth login is allowed\n    },\n  });\n  const dossier = await environment.loadDossier({\n    projectId: "B19DEDCC11D4E0EFC000EB9495D0F44F",\n    objectId: "D9AB379D11EC92C1D9DC0080EFD415BB",\n  });\n\n  hideLoadingBar(container1);\n\n  await dossier.refresh([\n    {\n      key: "K66",\n      container: container1,\n    },\n  ]);\n  // Your own code after the visualizations are all loaded\n} catch (error) {\n  // Your own error handling code\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"embed-visualizations-from-multiple-dossiers",children:"Embed visualizations from multiple dossiers"}),"\n",(0,t.jsx)(n.p,{children:"If you want to embed visualizations from multiple dossiers, you must turn on this functionality by setting the feature flag as shown below before calling the APIs:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"window.microstrategy.nativeEmbedding.featureFlags.multipleDossiers = true;\n"})}),"\n",(0,t.jsx)(n.p,{children:"Then you can embed the visualizations from multiple dossiers in parallel like this:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'async function loadVisualizationsFromDossier({\n  mstrEnvironment,\n  projectId,\n  dossierId,\n  vizAndContainers,\n}) {\n  const mstrDossier = await mstrEnvironment.loadDossier({\n    projectId,\n    objectId: dossierId,\n  });\n  // The function here would keep the old behavior, to load the visualizations page by page\n  await mstrDossier.refresh(vizAndContainers);\n}\n\nasync function loadVisualizationsFromDossiers() {\n  try {\n    // The preparation code starts here\n    const mstrEnvironment = await microstrategy.embeddingComponent.environments.create({\n      serverUrl: "https://demo.microstrategy.com/MicroStrategyLibrary",\n      getAuthToken: () => {\n        // Logic similar to the existing Embedding SDK, but only standard auth login is allowed\n      },\n    });\n    const projectId = "B19DEDCC11D4E0EFC000EB9495D0F44F";\n    const dossierAndVisualizations = [\n      {\n        dossierId: "DCB5909744F164E1D190B3B0137EEC5F",\n        vizAndContainers: [\n          {\n            key: "W70",\n            container: document.getElementById("containerA"),\n          },\n          {\n            key: "W112",\n            container: document.getElementById("containerB"),\n          },\n        ],\n      },\n      {\n        dossierId: "EDBA3FAE4F6A21187BD2CD92AE954802",\n        vizAndContainers: [\n          {\n            key: "W115",\n            container: document.getElementById("containerC"),\n          },\n          {\n            key: "W116",\n            container: document.getElementById("containerD"),\n          },\n        ],\n      },\n    ];\n    // Non-blocking concurrent loadings for visualizations from different dossiers\n    await Promise.all(\n      dossierAndVisualizations.map((dossierAndVisualization) =>\n        loadVisualizationsFromDossier({\n          mstrEnvironment,\n          projectId,\n          dossierId: dossierAndVisualization.dossierId,\n          vizAndContainers: dossierAndVisualization.vizAndContainers,\n        })\n      )\n    );\n  } catch (err) {\n    // Your custom error handling logic here\n  }\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"more-available-operations",children:"More available operations"}),"\n",(0,t.jsx)(n.p,{children:"After you embed multiple visualizations on a page, you can do some deeper manipulation of them."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"/embedding-sdk-docs/native-embedding-architecture/vis-manipulation",children:"Visualization manipulation on graphics"})}),"\n",(0,t.jsx)(n.p,{children:"This introductory shows what kinds of manipulation can we do and some behavior in the Native Embedding SDK."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"/embedding-sdk-docs/native-embedding-architecture/event-handling",children:"Add event handling"})}),"\n",(0,t.jsx)(n.p,{children:"You can listen to these events and handle the events in the handler functions."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"/embedding-sdk-docs/native-embedding-architecture/apply-filter",children:"Retrieve and apply filters"})}),"\n",(0,t.jsx)(n.p,{children:"You can manipulate the chapter-level filters, on-page selectors, and visualizations used as filters via the Native Embedding SDK available since 2021 Update 9."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"/embedding-sdk-docs/native-embedding-architecture/dossier-info-api",children:"Getting dossier info via APIs"})}),"\n",(0,t.jsx)(n.p,{children:"You can use the Native Embedding SDK to get the definition or data from the dossier."}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"references",children:"References"}),"\n",(0,t.jsx)(n.p,{children:"This piece of code contains a function from the following namespace and classes:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"/embedding-sdk-docs/native-embedding-architecture/embedding-components",children:(0,t.jsx)(n.code,{children:"microstrategy.embeddingComponent.environments"})})," Namespace"]}),"\n",(0,t.jsxs)(n.p,{children:["This namespace is responsible for creating and destroying ",(0,t.jsx)(n.code,{children:"MstrEnvironment"})," objects."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"/embedding-sdk-docs/native-embedding-architecture/mstr-environment",children:(0,t.jsx)(n.code,{children:"MstrEnvironment"})})," Class"]}),"\n",(0,t.jsxs)(n.p,{children:["This class is the object returned from the ",(0,t.jsx)(n.code,{children:"microstrategy.embeddingComponent.environments.create()"})," function, which is responsible for creating and destroying ",(0,t.jsx)(n.code,{children:"MstrDossier"})," objects."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"/embedding-sdk-docs/native-embedding-architecture/mstr-dossier",children:(0,t.jsx)(n.code,{children:"MstrDossier"})})," Class"]}),"\n",(0,t.jsxs)(n.p,{children:["This class is returned from the ",(0,t.jsx)(n.code,{children:"MstrEnvironment.loadDossier()"})," function, which is responsible for showing visualizations in containers."]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},1151:(e,n,i)=>{i.d(n,{Z:()=>a,a:()=>o});var t=i(7294);const s={},r=t.createContext(s);function o(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);